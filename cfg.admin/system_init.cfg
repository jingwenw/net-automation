#
# This setup assuming ssh has been installed and setup after Ubuntu Server
#     installed.
#

#
# The global variables for this project
#
IP_ROUTE_DEFAULT_GW_IP := 10.1.1.1
ADMIN_USERNAME := $USER

#
# Install the basic tools after Linux is initially up.
#

STEP_000.CMD := sudo pwd; cd /bin; sudo ln -fs bash sh
STEP_000.description:= Root privilege required for this setup and change sh to bash - VERY important !!!

STEP_001.CMD := if [ -e $HOME/.ssh/id_rsa ]; then echo "SSH id exists so skip"; else ssh-keygen -f $HOME/.ssh/id_rsa -t rsa -N ''; fi
STEP_001.description:= Generate ssh id if not done yet

STEP_002.CMD := sudo sed -i 's/http:\/\/.*ubuntu\.com/http:\/\/mirrors\.wikimedia\.org/' /etc/apt/sources.list
STEP_002.description:= Replace apt-get mirror with wikimedia

STEP_003.CMD := sudo ip route add default via $::TQ_CONFIG{IP_ROUTE_DEFAULT_GW_IP}; pwd
STEP_003.description:= Add default ip route

STEP_004.CMD := echo "$::TQ_CONFIG{ADMIN_USERNAME} ALL=(ALL) NOPASSWD: ALL" |sudo tee -a /etc/sudoers
STEP_004.description:= Configure admin no pass required

STEP_005.CMD := sudo apt update
STEP_005.description:= Update apt repo

STEP_006.CMD := sudo apt upgrade -y && sudo apt dist-upgrade -y
STEP_006.description:= Apt Upgrade

STEP_007.CMD := if [ ! -f $HOME/.ssh ]; then sudo apt-get install inotify-tools -y; else echo "ssh key file exists so skip"; fi
STEP_007.description:= Generate the ssh key file if not done yet

STEP_008.CMD := sudo apt install -y ntp emacs cscope cscope-el inxi
STEP_008.description:= Install NTP required to GNU make

STEP_009.CMD := sudo apt autoromove; sudo apt-get check
STEP_009.description:= Apt clear and check - rebooting system is recommended

#
# As the basic of the system is updated, better do a reboot now
#


#
# GNU Build tools
#

STEP_011.CMD := sudo apt install -y build-essential
STEP_011.description:= Install GNU Make

STEP_012.CMD := sudo apt install -y automake autotools-dev libtool autoconf
STEP_012.description:= Install GNU autotools

STEP_013.CMD := sudo apt install -y python python-six python-dev
STEP_013.description:= Install Python

STEP_015.CMD := sudo apt install -y cmake
STEP_015.description:= Install CMake

STEP_016.CMD := sudo apt install -y software-properties-common
STEP_016.description:= Install software properties common

STEP_018.CMD := sudo apt install -y gcovr
STEP_018.description:= Install gcovr

STEP_019.CMD := sudo apt install -y pkg-config libssl-dev
STEP_019.description:= Install pkg-config and libssh

#
# Networking packages
#

STEP_021.CMD := sudo apt install -y libnuma-dev libpcap-dev
STEP_021.description:= Install libnuma libpcap required

STEP_022.CMD := sudo apt install -y socat iperf3
STEP_022.description:= Install the network testing tools

STEP_023.CMD := sudo apt install -y nmap
STEP_023.description:= Install the network analyzing tools

STEP_024.CMD := sudo apt install distcc distcc-pump ccache -y
STEP_024.description:= Choose distcc

STEP_025.CMD := sudo apt-get install tofrodos unzip default-jdk -y
STEP_025.description:= Choose dos2unix

STEP_026.CMD := sudo apt-get install inotify-tools -y
STEP_026.description:= Choose inotify-tools

#
# Linux Kernel upgrade
#
#  NOTE: make sure you really need a new kernel before starting the followings.
#

#STEP_030.CMD := sudo apt install linux-image-generic-hwe-16.04-edge
#STEP_030.description := Upgrade linux kernel

#
# Should run after reboot with new kernel
#
#STEP_032.CMD := sudo apt-get install linux-headers-$(uname -r)
#STEP_032.description := Update linux kenerl header files for building/gcc


#
# Simple X tools
#
STEP_041.CMD := sudo apt install -y xtightvncviewer xvfb
STEP_041.description := Install tight vnc client and xvfb server

#
# To turn the linux server into an ip router:
#

STEP_061.CMD := echo sudo sysctl net.ipv4.ip_forward=1
STEP_061.description:= Set net.ipv4.ip_forward = 1 in run-time

STEP_062.CMD := echo sudo sed -i 's/^#net.ipv4.ip_forward=.*/net.ipv4.ip_forward = 1/' /etc/sysctl.conf
STEP_062.description:= Set net.ipv4.ip_forward = 1 permenently on reboot

STEP_065.CMD := echo sudo route add -net 192.168.201.0/24 gw 192.168.1.3 dev enp2s0
STEP_065.description:= IP route add a new entry

#
# To disable appArmor which caused USB pass-through issues for VMs
#

STEP_071.CMD := sudo /etc/init.d/apparmor stop; pwd
STEP_071.description:= Stop the service of apparmor

STEP_072.CMD := sudo update-rc.d -f apparmor remove; pwd
STEP_072.description:= Remove the service of apparmor from bootup

STEP_073.CMD := sudo apt remove apparmor -y; pwd
STEP_073.description:= Remove the apparmor package

#
# Linux Kernel upgrade
#
#  NOTE: make sure you really need a new kernel before starting the followings.
#
#
#STEP_010.CMD := sudo apt install linux-image-generic-hwe-16.04-edge
#STEP_010.description := Upgrade linux kernel
#
#
# Should run after reboot with new kernel
#
#STEP_012.CMD := sudo apt-get install linux-headers-$(uname -r)
#STEP_012.description := Update linux kenerl header files for building/gcc
#
#
# Clear cache in linux
#
#
#STEP_022.CMD := sync; echo 1 | sudo tee /proc/sys/vm/drop_caches
#STEP_022.description := Clear PageCache only
#
#STEP_023.CMD := sync; echo 2 | sudo tee /proc/sys/vm/drop_caches
#STEP_023.description := Clear dentries and inodes only
#
#STEP_024.CMD := sync; echo 3 | sudo tee /proc/sys/vm/drop_caches
#STEP_024.description := Clear PageCache and dentries and inodes
#

#
# Systemback used to create ISO images from the live system
#
# NOTES:
# - Only 4Gb or less in backup can be converted to an ISO image
# - For CLI run, the error log can be found as /tmp/systemback-cli_stderr
# - Only GUI supports in creating ISO images, the CLI only supports basic
#   backup/recover operations
# - Most of the abortions would be caused by lacking the read permission for
#   a file - check syslog or /tmp/systemback-cli_stderr for details in failing
#

STEP_081.CMD := sudo add-apt-repository ppa:nemh/systemback -y
STEP_081.description := Add the repo of the util - interactive

STEP_082.CMD := sudo apt update && sudo apt install systemback systemback-cli -y
STEP_082.description := Install systemback

STEP_083.CMD := echo /usr/lib/systemback/sbsustart systemback or sudo systemback-cli
STEP_083.description := How to run the tool - interactive


#
# Now it's better to reboot the system after such significant system changes
#
STEP_099.CMD := echo sudo init 6
STEP_099.description := Reboot is recommended after significant changes, apparmor
