#
# This is to setup OpenStack Keystone on the ubuntu server 16.04
#
# ref: https://docs.openstack.org/ocata/install-guide-ubuntu
#
# Prerequisites:
#   - The basic IP network should be up running; and
#   - The ssh connection should be configured with out passwd typed
#     e.g., echo "stack ALL=(ALL) NOPASSWD: ALL" | tee -a /etc/sudoers
#

#
# The global variables for this project
#
OS_CONTROLLER_IF_MANAGEMENT := 10.0.0.11/24

OS_CONTROLLER_IF_PROVIDER_NAME := enp0s25
OS_COMPUTE1_IF_PROVIDER_NAME := enp3s0f1

OS_NET := 10.0.0.0/24
OS_CONTROLLER_NAME := controller
OS_CONTROLLER_IP := 10.0.0.11
OS_COMPUTE1_NODE_NAME := compute1
OS_COMPUTE1_NODE_IP := 10.0.0.31
OS_BLOCK1_NODE_NAME := block1
OS_BLOCK1_NODE_IP := 10.0.0.41
OS_OBJECT1_NODE_NAME := object1
OS_OBJECT1_NODE_IP := 10.0.0.51
OS_OBJECT2_NODE_NAME := object2
OS_OBJECT2_NODE_IP := 10.0.0.52

# The stable ntp server either name or ip:
OS_NTP_SERVER := 10.121.52.95

OS_ADMIN_CLI := export no_proxy=localhost,127.0.0.1,controller,compute1; openstack --os-auth-url http://controller:35357/v3 --os-project-domain-name Default --os-user-domain-name Default --os-project-name admin --os-identity-api-version=3 --os-image-api-version=2 --os-username admin --os-password=stack 

OS_DEMO_CLI := export no_proxy=localhost,127.0.0.1,controller,compute1; openstack --os-auth-url http://controller:5000/v3 --os-project-domain-name default --os-user-domain-name default --os-identity-api-version=3 --os-image-api-version=2 --os-project-name demo --os-username demo --os-password=demo

#
# Ubuntu routine package update
#

STEP_000.CMD := sudo pwd
STEP_000.description:= Root privilege required for this setup


#
# Install and configure Identity Service
#

STEP_200.CMD := sudo mysqladmin drop keystone -u root --password='stack' --force; pwd
STEP_200.description := Delete the db if exists;

STEP_201.CMD := sudo mysqladmin create keystone -u root --password='stack'
STEP_201.description := Create keystone db

STEP_202.CMD := echo "grant all privileges on keystone.* to 'keystone'@'localhost' identified by 'stack';" > /tmp/grant.sql; sudo mysql -u root -pstack < /tmp/grant.sql; pwd
STEP_202.description := Grant privileges to keystone user

STEP_203.CMD := echo "grant all privileges on keystone.* to 'keystone'@'%' identified by 'stack';" > /tmp/grant.sql; sudo mysql -u root -pstack < /tmp/grant.sql; pwd
STEP_203.description := Grant privileges to keystone user


STEP_204.CMD := sudo apt install keystone -y
STEP_204.description := Install keystone the identity service.

STEP_210_CMD := sudo sed -i '/^connection = sqlite:/I d' /etc/keystone/keystone.conf
STEP_210.description := Remove sqllit if it exists

STEP_211_CMD := MYEX_UPDATE_FILE::/etc/keystone/keystone.conf::connection = mysql+pymysql::\nconnection = mysql+pymysql://keystone:stack@controller/keystone\n::/^\[database\]/::
STEP_211.description := Configure db connection for keystone

STEP_216_CMD :=  MYEX_UPDATE_FILE::/etc/keystone/keystone.conf::^provider = fernet::\nprovider = fernet\n::/^\[token\]/::
STEP_216.description := Configure token provider for keystone

STEP_217_CMD := sudo su -s /bin/sh -c "keystone-manage db_sync" keystone
STEP_217.description := Populate the IS db - interactive cli

STEP_218_CMD := sudo keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone; sudo keystone-manage credential_setup --keystone-user keystone --keystone-group keystone; pwd
STEP_218.description := Init Fernet key repos

STEP_219_CMD := sudo keystone-manage bootstrap --bootstrap-password stack --bootstrap-admin-url http://controller:35357/v3/ --bootstrap-internal-url http://controller:5000/v3/ --bootstrap-public-url http://controller:5000/v3/ --bootstrap-region-id RegionOne
STEP_219.description := Bootstrap the IS

STEP_220_CMD := MYEX_UPDATE_FILE::/etc/apache2/apache2.conf::ServerName controller::\nServerName controller::$::trailling
STEP_220.description := Configure HTTP server

STEP_229_CMD := sudo service apache2 restart; sudo rm -rf /var/lib/keystone/keystone.db
STEP_229.description := Restart the HTTP server and remove the default SQLite db

#
# Now create a domain, porojects, users and roles
#

STEP_231_CMD := $::TQ_CONFIG{OS_ADMIN_CLI} project create --domain default --description "Service Project" service
STEP_231.description := Create the service project that contains an unique user


STEP_232_CMD := $::TQ_CONFIG{OS_ADMIN_CLI} project create --domain default --description "Demo Project" demo
STEP_232.description := Create the demo project for unprivileged users


STEP_233_CMD := $::TQ_CONFIG{OS_ADMIN_CLI} user create --domain default --password=demo demo
STEP_233.description := Create the user of demo

STEP_234_CMD := $::TQ_CONFIG{OS_ADMIN_CLI} role create user
STEP_234.description := Create the user of demo

STEP_235_CMD := $::TQ_CONFIG{OS_ADMIN_CLI} role add --project demo --user demo user
STEP_235.description := Add the user role to the user demo

STEP_240_CMD := $::TQ_CONFIG{OS_ADMIN_CLI} token issue; pwd
STEP_240.description := Verify operations for admin

STEP_241_CMD := $::TQ_CONFIG{OS_DEMO_CLI} token issue; pwd
STEP_241.description := Verify operations for demo user
