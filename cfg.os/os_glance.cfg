#
# This is to setup OpenStack Glance on the ubuntu server 16.04
#
# ref: https://docs.openstack.org/ocata/install-guide-ubuntu
#
# Prerequisites:
#   - The basic IP network should be up running; and
#   - The ssh connection should be configured with out passwd typed
#     e.g., echo "stack ALL=(ALL) NOPASSWD: ALL" | tee -a /etc/sudoers
#

#
# The global variables for this project
#
OS_CONTROLLER_IF_MANAGEMENT := 10.0.0.11/24

OS_CONTROLLER_IF_PROVIDER_NAME := enp0s25
OS_COMPUTE1_IF_PROVIDER_NAME := enp3s0f1

OS_NET := 10.0.0.0/24
OS_CONTROLLER_NAME := controller
OS_CONTROLLER_IP := 10.0.0.11
OS_COMPUTE1_NODE_NAME := compute1
OS_COMPUTE1_NODE_IP := 10.0.0.31
OS_BLOCK1_NODE_NAME := block1
OS_BLOCK1_NODE_IP := 10.0.0.41
OS_OBJECT1_NODE_NAME := object1
OS_OBJECT1_NODE_IP := 10.0.0.51
OS_OBJECT2_NODE_NAME := object2
OS_OBJECT2_NODE_IP := 10.0.0.52

# The stable ntp server either name or ip:
OS_NTP_SERVER := 10.121.52.95

OS_ADMIN_CLI := export no_proxy=localhost,127.0.0.1,controller,compute1; openstack --os-auth-url http://controller:35357/v3 --os-project-domain-name Default --os-user-domain-name Default --os-project-name admin --os-identity-api-version=3 --os-image-api-version=2 --os-username admin --os-password=stack 

OS_DEMO_CLI := export no_proxy=localhost,127.0.0.1,controller,compute1; openstack --os-auth-url http://controller:5000/v3 --os-project-domain-name default --os-user-domain-name default --os-identity-api-version=3 --os-image-api-version=2 --os-project-name demo --os-username demo --os-password=demo

#
# Ubuntu routine package update
#

STEP_000.CMD := sudo pwd
STEP_000.description:= Root privilege required for this setup


#
# Configure Glance db and user account
#

STEP_301.CMD := sudo mysqladmin drop glance -u root --password='stack' --force; pwd
STEP_301.description := Delete the Glance db if exists;

STEP_302.CMD := sudo mysqladmin create glance -u root --password='stack'
STEP_302.description := Create the Glance db

STEP_303.CMD := echo "grant all privileges on glance.* to 'glance'@'localhost' identified by 'stack';" > /tmp/grant.sql; sudo mysql -u root -pstack < /tmp/grant.sql; pwd
STEP_303.description := Grant privileges to glance user

STEP_304.CMD := echo "grant all privileges on glance.* to 'glance'@'%' identified by 'stack';" > /tmp/grant.sql; sudo mysql -u root -pstack < /tmp/grant.sql; pwd
STEP_304.description := Grant privileges to glance user

STEP_310_CMD := $::TQ_CONFIG{OS_ADMIN_CLI} user create --password=stack glance; pwd 
STEP_310.description := Create glance user

STEP_311_CMD := $::TQ_CONFIG{OS_ADMIN_CLI} role add --project=service --user=glance admin; pwd
STEP_311.description := Add the admin role to glance user and service project

STEP_312_CMD := $::TQ_CONFIG{OS_ADMIN_CLI} service create --name=glance --description="OpenStack Image" image; pwd
STEP_312.description := Create glance service entity

STEP_315_CMD := $::TQ_CONFIG{OS_ADMIN_CLI} endpoint create --region RegionOne image public http://controller:9292; pwd
STEP_315.description := Create glance service API public endpoint

STEP_316_CMD := $::TQ_CONFIG{OS_ADMIN_CLI} endpoint create --region RegionOne image internal http://controller:9292; pwd
STEP_316.description := Create glance service API internal endpoint

STEP_317_CMD := $::TQ_CONFIG{OS_ADMIN_CLI} endpoint create --region RegionOne image admin http://controller:9292; pwd
STEP_317.description := Create glance service API admin endpoint

#
# Install and configure Glance
#

STEP_321.CMD := sudo apt install glance -y
STEP_321.description := Install Glance the image service.

STEP_322_CMD := sudo sed -i '/^connection = sqlite:/I d' /etc/glance/glance-api.conf
STEP_322.description := Remove sqllit if it exists

STEP_323_CMD := MYEX_UPDATE_FILE::/etc/glance/glance-api.conf::connection = mysql+pymysql::\nconnection = mysql+pymysql://glance:stack@controller/glance\n::/^\[database\]/::
STEP_323.description := Configure db connection for glance api

STEP_324_CMD := MYEX_UPDATE_FILE::/etc/glance/glance-api.conf::#MYEX ID::\n#MYEX ID\nauth_uri = http://controller:5000\nauth_url = http://controller:35357\nmemcached_servers = controller:11211\nauth_type = password\nproject_domain_name = default\nuser_domain_name = default\nproject_name = service\nusername = glance\npassword = stack\n::/^\[keystone_authtoken\]/::
STEP_324.description := Configure IS access for glance api


STEP_328_CMD := MYEX_UPDATE_FILE::/etc/glance/glance-api.conf::^flavor = keystone::\nflavor = keystone\n::/^\[paste_deploy\]/::
STEP_328.description := Configure flavor connection for glance api

STEP_329_CMD := MYEX_UPDATE_FILE::/etc/glance/glance-api.conf::#MYEX ID::\n#MYEX ID\nstores = file,http\ndefault_store = file\nfilesystem_store_datadir = \/var\/lib\/glance\/images\/ \n::/^\[glance_store\]/::
STEP_329.description := Configure store for glance api

STEP_331_CMD := MYEX_UPDATE_FILE::/etc/glance/glance-registry.conf::connection = mysql+pymysql::\nconnection = mysql+pymysql://glance:stack@controller/glance\n::/^\[database\]/::
STEP_331.description := Configure db connection for glance registry

STEP_332_CMD := MYEX_UPDATE_FILE::/etc/glance/glance-registry.conf::#MYEX ID::\n#MYEX ID\nauth_uri = http://controller:5000\nauth_url = http://controller:35357\nmemcached_servers = controller:11211\nauth_type = password\nproject_domain_name = default\nuser_domain_name = default\nproject_name = service\nusername = glance\npassword = stack\n::/^\[keystone_authtoken\]/::
STEP_332.description := Configure IS connection for glance registry

STEP_333_CMD := MYEX_UPDATE_FILE::/etc/glance/glance-registry.conf::^flavor = keystone::\nflavor = keystone\n::/^\[paste_deploy\]/::
STEP_333.description := Configure flavor connection for glance registry


STEP_337_CMD := sudo su -s /bin/sh -c "glance-manage db_sync" glance
STEP_337.description := Populate the image db - interactive cli

STEP_339_CMD := sudo service glance-registry restart; sudo service glance-api restart
STEP_339.description := Restart the image server

#
# Now download an image and put it into Glance service
#

STEP_351_CMD := if [ -e /tmp/cirros-0.3.5-x86_64-disk.img ]; then echo "image file downloaded already "; else wget http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img; mv cirros-0.3.5-x86_64-disk.img /tmp/; fi
STEP_351.description := Download the cirrOS the small linux image

STEP_352_CMD := sleep 5; $::TQ_CONFIG{OS_ADMIN_CLI} image create "cirros" --file=/tmp/cirros-0.3.5-x86_64-disk.img --disk-format=qcow2 --container-format=bare --public
STEP_352.description := Create the Glance image

STEP_356_CMD := if [ -e /tmp/manila-service-image-master.qcow2 ]; then echo "image file downloaded already "; else wget http://tarballs.openstack.org/manila-image-elements/images/manila-service-image-master.qcow2; mv manila-service-image-master.qcow2 /tmp/; fi
STEP_356.description := Download the Manila service image

STEP_357_CMD := sleep 15; $::TQ_CONFIG{OS_ADMIN_CLI} image create "manila-service-image" --file=/tmp/manila-service-image-master.qcow2 --disk-format=qcow2 --container-format=bare --public
STEP_357.description := Create the Glance image for Manila share file

STEP_359_CMD := $::TQ_CONFIG{OS_ADMIN_CLI} image list; pwd
STEP_359.description := Confirm the image created

