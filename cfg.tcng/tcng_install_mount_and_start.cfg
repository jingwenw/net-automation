#
# This is to setup TCNG QA framework on the ubuntu server 16.04
#
# NOTES:
#   - For interactive cmd, please append "pwd" at the end.
#   - Built-in func: MYE_UPDATE_FILE
#
#
# Prerequisites:
#   TCNG_PACKAGE_ROOT, containing all the required files, must be provided

#
# The global variables for this project
#
TCNG_REPOS_ROOT := /var/jenkins/TCNG_Repos_Root

# The default password for all the service users

#
# Ubuntu initial sudo passwd
#

STEP_000.CMD := sudo pwd
STEP_000.description:= Root privilege required for this setup

#
# Link the environment xml and env together
#
STEP_009.CMD := rm -rf $::TQ_CONFIG{TCNG_REPOS_ROOT}; ln -fs ${TNT_WORKSPACE_TOPDIR} $::TQ_CONFIG{TCNG_REPOS_ROOT}
STEP_009.description:= Update the soft link to the same one in environment.xml

#
# Install the QA framework libs/drivers from the image
#

STEP_011.CMD := sudo chmod 777 /usr/local/bin
STEP_011.description := Make /usr/local/bin public

STEP_012.CMD := ${TNT_TCNG_QA_TOPDIR}/framework/framework-ctl stop; pwd
STEP_012.description := Stop QA framework first if it running

STEP_013.CMD := cd ${TNT_TCNG_QA_TOPDIR} && hg pull -u; ${TNT_TCNG_QA_TOPDIR}/framework/framework-ctl stop; sudo killall tunetcomm; sudo umount /tmp/testlog > /dev/null 2>&1; sudo chmod -R a+rwx /tmp/TCNG; sudo chmod -R a+rwx /tmp/testlog/; sudo chmod -R a+rwx /tmp/nfs; sudo chmod -R a+rwx /tmp/tunetcomm.log; sudo chmod -R a+rwx /tmp/logs
STEP_013.description := Stop the framework and Re-build tunetcom with new port configured

STEP_015.CMD := cd ${TNT_TCNG_QA_TOPDIR}/framework/drivers/n_sci && rm -rf .tmp_versions/n_sci.mod
STEP_015.description := Clean the leftover drivers

STEP_016.CMD := ${TNT_TCNG_QA_TOPDIR}/framework/framework-ctl clean; ${TNT_TCNG_QA_TOPDIR}/framework/framework-ctl build
STEP_016.description := Install tunetcomm built from QA repo

STEP_017.CMD := cp -Rp $TCNG_PACKAGE_ROOT/* ./
STEP_017.description := Install the libs and headers built from TunetSysShared repo.

STEP_018.CMD := cd $TCNG_PACKAGE_ROOT/external_repos/TCNG_ASIC/mse/msecode/tools/asm && make install
STEP_018.description := Install asm built from ASIC repo

STEP_019.CMD := cd $TCNG_PACKAGE_ROOT/external_repos/TCNG_ASIC/mse/msecode/tools/tdb && make install
STEP_019.description := Install tdb built from ASIC repo

#
# NFS setup
#

STEP_020.CMD := mkdir -p ${NFS_SERVER_MOUNT}/usr/bin
STEP_020.description := Create the subdir of /usr/bin under nfs mounting point

STEP_021.CMD := for app in amr/amr gateway_mgr/gwm oam/oam phy_mgr/plm phy_mgr/perl_tests/plm_perl_test pqm/pqm rf_engine/rfe rf_engine/txe/unit_tests_txe_dll/rfe_unit_tests_txe_dll rf_engine/txe/unit_tests_txe_net/rfe_unit_tests_txe_net tc_cfg_mgr/tcm tc_cfg_mgr/c_tests/tcm_c_test c2s_optical/c2s_optical imon/imon rd/rd rpd/rpd pert/pert mc/mc; do cp -v ${TCNG_PACKAGE_ROOT}/build/apps/${TNT_PLATFORM_NAME}-armv5l/$app ${NFS_SERVER_MOUNT}/usr/bin; done
STEP_021.description := Copy the apps to /usr/bin under NFS mounting point

STEP_022.CMD := for app in amr/amr gateway_mgr/gwm oam/oam phy_mgr/plm phy_mgr/perl_tests/plm_perl_test pqm/pqm rf_engine/rfe rf_engine/txe/unit_tests_txe_dll/rfe_unit_tests_txe_dll rf_engine/txe/unit_tests_txe_net/rfe_unit_tests_txe_net tc_cfg_mgr/tcm tc_cfg_mgr/c_tests/tcm_c_test c2s_optical/c2s_optical imon/imon rd/rd rpd/rpd pert/pert mc/mc; do cp -v ${TCNG_PACKAGE_ROOT}/build/apps/${TNT_PLATFORM_NAME}-armv5l/$app ${NFS_SERVER_MOUNT}; done
STEP_022.description := Copy the apps to / under NFS mounting point

STEP_023.CMD := for sysapp in mwareui sys_mon; do cp -v ${TCNG_PACKAGE_ROOT}/binaries/${TNT_PLATFORM_NAME}-armv5l-timesys-linux-gnueabi/$sysapp ${NFS_SERVER_MOUNT}/usr/bin; done
STEP_023.description := Copy the sysapp to /usr/bin under NFS mounting point

STEP_024.CMD := for sysapp in mwareui sys_mon; do cp -v ${TCNG_PACKAGE_ROOT}/binaries/${TNT_PLATFORM_NAME}-armv5l-timesys-linux-gnueabi/$sysapp ${NFS_SERVER_MOUNT}; done
STEP_024.description := Copy the sysapp to / under NFS mounting point

STEP_025.CMD := cp -v ${TCNG_PACKAGE_ROOT}/binaries/${TNT_PLATFORM_NAME}-armv5l-timesys-linux-gnueabi/${TNT_PLATFORM_NAME}-linux-2.6.33/drivers/tcng_gpio/tcng_gpio_uland ${NFS_SERVER_MOUNT}/
STEP_025.description := Copy the uland to the NFS mouting point

STEP_026.CMD := cp -v ${TCNG_PACKAGE_ROOT}/binaries/${TNT_PLATFORM_NAME}-armv5l-timesys-linux-gnueabi/target_dbg_tools/dump_pd ${NFS_SERVER_MOUNT}
STEP_026.description := Copy the dump_pd to /usr/bin under NFS mounting point

STEP_027.CMD :=  cp -v ${TCNG_PACKAGE_ROOT}/source/tantalus/source/tools/qaproxy/qaproxy ${NFS_SERVER_MOUNT}
STEP_027.description := Copy the qaproxy to /usr/bin under NFS mounting point

#
# Reboot the device after NFS setup
#

STEP_031.CMD := sudo umount /tmp/testlog > /dev/null 2>&1; sudo rm -rf /var/lock/LCK*tty*; sleep 2; ${TNT_TCNG_QA_TOPDIR}/framework/framework-ctl restart
STEP_031.description := Restart the QA Framework with installed drivers/bins

#STEP_032.CMD := perl ${TNT_TCNG_QA_TOPDIR}/testcases/TestFramework/Tool/Deploy/TestbedReboot/TestbedReboot.pl
#STEP_032.description := Reboot the board
