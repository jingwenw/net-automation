#
# This is to setup TCNG QA framework on the ubuntu server 16.04
#
# NOTES:
#   - For interactive cmd, please append "pwd" at the end.
#   - Built-in func: MYE_UPDATE_FILE
#
#
# Prerequisites:
#

#
# The global variables for this project
#
TCNG_REPOS_ROOT := /var/jenkins/TCNG_Repos_Root

# The default password for all the service users

#
# Ubuntu initial sudo passwd
#

STEP_000.CMD := sudo pwd
STEP_000.description:= Root privilege required for this setup

STEP_009.CMD := rm -rf $::TQ_CONFIG{TCNG_REPOS_ROOT}; ln -fs ${TNT_WORKSPACE_TOPDIR} $::TQ_CONFIG{TCNG_REPOS_ROOT}
STEP_009.description:= Update the soft link to the same one in environment.xml

#
# Build the image
#

STEP_012.CMD := cd /tmp && sudo rm -rf ./bitx_unit_test ./dev_mtd*
STEP_012.description := Cleanup the unit test tmp dirs

STEP_013.CMD := cd ${TNT_WORKSPACE_TOPDIR} && rm -rf ./build ./binaries
STEP_013.description := Cleanup before build

# Sync the repos will always sync with the official repos, controlled by $TCNG_NEED_SYNC_REPOS
STEP_014.CMD := if [[ -n "$TCNG_NEED_SYNC_REPOS" && $TCNG_NEED_SYNC_REPOS == 1 ]] ; then ${TNT_WORKSPACE_TOPDIR}/integration/reposync.sh default --purge; else echo "Not Sync Repos"; fi
STEP_014.description := Sync repos

STEP_015.CMD := cd ${TNT_WORKSPACE_TOPDIR}/integration && ./build_tcng-all.sh
STEP_015.description := Build TCNG

STEP_016.CMD := export FLASH_IMAGE_PATH=${TNT_WORKSPACE_TOPDIR}/binaries/${TNT_PLATFORM_NAME}-armv5l-timesys-linux-gnueabi/${TNT_PLATFORM_NAME}_32MB_image_wh.bin; ls -la $FLASH_IMAGE_PATH
STEP_016.description := Verify the build as $FLASH_IMAGE_PATH


