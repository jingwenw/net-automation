#
# This is to setup TCNG QA framework on the ubuntu server 16.04
#
# NOTES:
#   - For interactive cmd, please append "pwd" at the end.
#   - Built-in func: MYE_UPDATE_FILE
#
#
# Prerequisites:
#

#
# The global variables for this project
#

# The default password for all the service users

WORKSPACE_ROOT := /var/jenkins
TCNG_REPOS_ROOT := /var/jenkins/TCNG_Repos_Root
MY_ENVIRONMENT_FILE := ~/.tcng/myEnvironment.xml

#
# Ubuntu initial sudo passwd
#

STEP_000.CMD := sudo pwd
STEP_000.description:= Root privilege required for this setup

STEP_001.CMD := sudo apt install -y build-essential
STEP_001.description:= Install GNU Make

STEP_002.CMD := sudo apt install -y automake autotools-dev libtool autoconf
STEP_002.description:= Install GNU autotools

STEP_003.CMD := cd /bin; sudo ln -fs bash sh
STEP_003.description:= Change sh to bash - very important for TCNG

STEP_004.CMD := sudo apt-get install tofrodos unzip default-jdk -y
STEP_004.description:= Choose dos2unix

STEP_005.CMD := sudo apt-get install inotify-tools -y
STEP_005.description:= Choose inotify-tools

STEP_006.CMD := if [ ! -f $HOME/.ssh ]; then sudo apt-get install inotify-tools -y; else echo "ssh key file exists so skip"; fi
STEP_006.description:= Generate the ssh key file if not done yet

#
# Step 1: Install the Mercurial and libcurses
#

# Interactive cmd
STEP_011.CMD := sudo add-apt-repository ppa:mercurial-ppa/releases -y
STEP_011.description:= Add the up-to-date version Mercurial repo

STEP_012.CMD := sudo apt update; sudo apt upgrade -y; sudo apt install -y mercurial
STEP_012.description:= Install Mercurial

STEP_013.CMD := sudo apt install -y ncurses-dev
STEP_013.description:= Install libcurses

STEP_014.CMD := sudo apt install nfs-kernel-server tcl -y
STEP_014.description:= Install NFS and TCL

STEP_015.CMD := sudo apt install exim4-config -y
STEP_015.description:= Install the tool to configure mail

STEP_016.CMD := sudo apt install libc6-dev-i386 -y
STEP_016.description:= Install the libc6 32 bit

STEP_017.CMD := sudo apt install libsqlite3-dev libxml2-dev libxslt1-dev -y
STEP_017.description:= Install the sqlite3 and libxml headers

STEP_018.CMD := sudo apt install libreadline-dev minicom setserial libdbi-perl libusb-1.0-0-dev -y
STEP_018.description:= Install the libreadline-dev and serial port tools

STEP_019.CMD := sudo apt install expat:i386 -y; cd /lib/i386-linux-gnu && sudo ln -fs libexpat.so.1 libexpat.so
STEP_019.description:= Install the libexpat for unittest

#
# Step 2: Install Software
#

STEP_021.CMD := sudo apt install -y libexpat1-dev; sudo cpan -y -i "Archive::Zip" "File::Grep" "Getopt::Whatever" "IO::CaptureOutput" "Convert::Binary::C" "Net::OpenSSH" "Switch" "XML::Simple" "XML::Writer" "XML::Merge" "Digest::CRC" "File::Grep" "Getopt::Whatever" "IO::CaptureOutput" "Convert::Binary::C" "Net::OpenSSH" "Switch" "XML::Simple" "XML::Writer" "XML::XPath" "Digest::CRC" "boolean" "IO::Interface::Simple" "Archive::Zip" "Date::Calc" "File::chdir" "File::Slurp" "File::Copy::Recursive" "Math::Round" "Data::Random" "Proc::ProcessTable" "FreezeThaw" "Devel::Size" "Devel::Cycle" "Term::ReadKey" "DateTime::Format::Natural::Lang::EN" "HTML::Table" "Device::SerialPort" "Net::Telnet" "MIME::Lite" "Logger::Syslog" "Data::Dumper" "Carp" "DBD::SQLite"; pwd
STEP_021.description:= Configure CPAN and install a few Perl modules

STEP_023.CMD := pkgs=`cat install.ubuntu-packages.list`; sudo apt-get install $pkgs
STEP_023.description:= Install all packages required by TCNG QA

STEP_024.CMD := if [ ! -f ~/.hgrc ]; then cp -Rp CFG_ROOT_DIR/.cfg_home/.hgrc ~/.hgrc; else echo "Skip copy .hgrc file"; fi
STEP_024.description:= Install locla hgrc file

STEP_025.CMD := sudo update-alternatives --config java; pwd
STEP_025.description:= Choose real Java

STEP_026.CMD := sudo update-alternatives --config javac; pwd
STEP_026.description:= Choose Java Compiler

STEP_027.CMD := sudo apt install sqlite3 -y
# or "download sqlite v3 rpm from Oracle"; pwd
STEP_027.description:= Install SQL Developer

STEP_028.CMD := sudo apt install distcc distcc-pump ccache -y
STEP_028.description:= Choose distcc

STEP_029.CMD := sudo apt-get install tofrodos unzip python-rbtools -y
STEP_029.description:= Choose dos2unix unzip and code review tools

#
# Step 3: Configure Ubuntu
#

STEP_031.CMD := if [ ! -f $HOME/.ssh/id_rsa ]; then ssh-keygen -f $HOME/.ssh/id_rsa -t rsa -N ''; else echo "Skip generating ssh key"; fi
STEP_031.description:= Generate ssh id keys if not existing

STEP_032.CMD := ssh-copy-id 'hguser@hg'
STEP_032.description := Setup keyless ssh to hg - Pa$$wordhg

STEP_033.CMD := ssh-copy-id 'qaxp@qaxp';
STEP_033.description := Setup keyless ssh to qaxp - Pa$$word

STEP_034.CMD := ssh-copy-id 'root@devops-fw1';
STEP_034.description := Setup keyless ssh to qaxp - Pa$$word

STEP_035.CMD := echo 15 * * * * /usr/sbin/ntpdate ntp.ubuntu.com &> /dev/null
STEP_035.description := Install crontab job to update ntp

STEP_036.CMD := sudo apt install sshfs libxss1 xvfb -y
STEP_036.description := Install libxssl xvfb mailutils and sshfs for SAM-BA/NFS

#STEP_036.CMD := sudo apt install mailutils; sudo dpkg-reconfigure exim4-config; pwd
#STEP_036.description := Configure mail dameon for SMTP delivery - interactive

STEP_037.CMD := MYEX_UPDATE_FILE::/etc/exports::# TCNG::# TCNG\n/tmp/nfs *(rw,fsid=1,nohide,all_squash,no_subtree_check,anonuid=1000,anongid=1000)\n::$::
STEP_037.description := Configure NFS server

STEP_038.CMD := MYEX_UPDATE_FILE::/etc/fuse.conf::# TCNG::# TCNG\nuser_allow_other\n::$::
STEP_038.description := Configure FUSE

STEP_039.CMD := sudo sed -i "s/anonuid=1000,anongid=1000/anonuid=${UID},anongid=${GROUPS}/" /etc/exports
STEP_039.description := Update the NFS configuration file for permissions

#
# Step 5: Setup TCNG Repos
#

STEP_051.CMD := if [ -d "~/workspace/TCNG_QA" ]; then echo "Repos exists"; else mkdir -p ~/workspace; cd ~/workspace && hg clone ssh://hguser@hg//var/hg/TCNG_QA && hg clone ssh://hguser@hg//var/hg/TCNG_Build_Tools; fi
STEP_051.description:= Cloning the TCNG repos - interactive

#
# Setup Local Environments
#

STEP_061.CMD := if [ -e "$::TQ_CONFIG{MY_ENVIRONMENT_FILE}" ]; then echo "The local environment exists"; else cd CFG_ROOT_DIR/.cfg_home && cp -rP --parents .tcng ~/ && cp -rP --parents .ssh ~/ && cp -rP .profile ~/; sed -i "s/trobot/${USER}/g" $::TQ_CONFIG{MY_ENVIRONMENT_FILE} ; fi
STEP_061.description:= Create the local enviroments file.

STEP_062.CMD := if [ -d $::TQ_CONFIG{WORKSPACE_ROOT} ]; then echo "Workspace $::TQ_CONFIG{WORKSPACE_ROOT} exists - skip"; else sudo mkdir -p $::TQ_CONFIG{WORKSPACE_ROOT} && sudo chown -R $USER:$USER $::TQ_CONFIG{WORKSPACE_ROOT} && mkdir -p $::TQ_CONFIG{WORKSPACE_ROOT}/workspace; fi
STEP_062.description:= Create the workspace root $::TQ_CONFIG{WORKSPACE_ROOT}


STEP_063.CMD := sudo usermod -aG dialout,cdrom,adm,plugdev,lpadmin,sambashare $USER
STEP_063.description:= Add the right groups


STEP_064.CMD := sudo cp TOOL_ROOT_DIR/Phidget/99-libphidget22.rules /etc/udev/rules.d/
STEP_064.description:= Add the udev rules for Phidget relay


